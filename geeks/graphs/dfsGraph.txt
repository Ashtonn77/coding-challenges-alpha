class Solution
{
    //Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj)
    {
        boolean[] visited = new boolean[adj.size()+1];
        ArrayList<Integer> result = new ArrayList<>();
        return dfs(0, adj, visited, result);
    }
    
    private ArrayList<Integer> dfs(int v, ArrayList<ArrayList<Integer>> adj, boolean[] visited, 
    ArrayList<Integer> result){
        
        result.add(v);
        visited[v] = true;
        
        for(int i = 0; i < adj.get(v).size(); i++){
            
            if(!visited[adj.get(v).get(i)]){
                dfs(adj.get(v).get(i), adj, visited, result);
            }
            
        }
        
        return result;
        
    }
    
}