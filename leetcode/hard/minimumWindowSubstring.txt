public class Solution {
    public string MinWindow(string s, string t) {
        
        if(s == null || t == null || s.Length == 0 || t.Length == 0)
            return "";
        
              
        IDictionary<char, int> map = new Dictionary<char, int>();
        foreach(var ch in t){
            if(map.ContainsKey(ch))
                map[ch]++;
            else
                map.Add(ch, 1);
        }
        
        int i = 0, j = 0, count = map.Count, left = 0, right = s.Length - 1, mn = s.Length;
        bool isFound = false;
        
        while(j < s.Length){
         
            char ec = s[j++];
            if(map.ContainsKey(ec)){                
                map[ec]--;
                if(map[ec] == 0)
                    count--;
                
            }
             
            if(count > 0) continue;
            while(count == 0){
                
                char sc = s[i++];
                if(map.ContainsKey(sc)){                    
                    map[sc]++;
                    if(map[sc] > 0)
                        count++;         
                                      
                }                
                
            }
            
            if((j - i) < mn){
                mn = j - i;
                left = i;
                right = j;
                isFound = true;
            }
            
            
        }        

        return !isFound ? "" : s.Substring(left - 1, right - left + 1);
    }
}